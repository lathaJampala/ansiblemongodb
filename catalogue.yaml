- name: configure catalogue component
  hosts: local
  connection: local
  become: yes
  tasks: 
  - name: disable default nodejs
    ansible.buitlin.command: dnf module disable nodejs -y

  - name: enable nodejs
    ansible.builtin.dnf:
     name: nodejs
     state: present

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: download catalogue code
    ansible.builtin.get_url: 
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: extract catalogue code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy catalogue service to system directory
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable catalogur
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: check products loades or not
    ansible.builtin.command: mongosh --host mongodb.latha.shop --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output

  - name: print catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output}}"

  - name: load products
    ansible.builtin.shell: mongosh --host mongodb.latha.shop < /app/db/master-data.js
    when: catalogue_output.stdout | int < 0